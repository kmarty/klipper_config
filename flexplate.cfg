# derived from https://github.com/zellneralex/klipper_config/raw/master/flexplate.cfg
######################################################################
#  Preparation 
#####################################################################
# copy this file in the same directory as your printer.cfg
# add 
#    [include flexplate.cfg]
# to your printer.cfg
#
# add
#    _SET_PLATE_OFFSET
# to your print start gcode to apply the offset before you print the first line of filament 
#
# A [save_variables] block is needed since a printer save variable needs to be used to have it available after power up.
# You can skip this if you already have an [save_variables] config block
# e.g: 
#    [save_variables]
#    filename: ~/klipper_config/.variables.stb

# I like to hide that file as there is nothing in that should be modified by the user.
# Do a klipper restart after adding the stuff above
#
# After klipper is back you need define your first plate e.g.
#    ADD_PLATE NAME=Texture OFFSET=-0.010
#
#####################################################################
#  Macro for the print_start gcode section of your slicer 
#  or your print start macro
#####################################################################
# _SET_PLATE_OFFSET : Set the z offset
# Set the offset of the active flexplate as an absolute Z-offset.
#
# !!! Caution: Any previous z-offset since printer is started will be
# overwritten. Please read also the description of the gcode SET_GCODE_OFFSET
# at https://www.klipper3d.org/G-Codes.html#extended-g-code-commands !!!
#
#####################################################################
#  Console ussage
#####################################################################
# LIST_PLATES: List all plates
#
# SET_PLATE NAME=<name>: Set the active flexplate
# The flexplate stored under the 'name' will be activated
#
# ADD_PLATE NAME=<name> [OFFSET=<offset>]: Add a new flexplate to the list
# If OFFSET is not defined than the default 0.000 will be used.
# !!! Caution do not use special characters like äüö or anything else in the name !!!
#
# REMOVE_PLATE NAME=<name>: Remove a flexplate from the list
# Note the last or active plate cannot be removed.
#
# CHANGE_PLATE_VALUE [NAME=<name>] [NEWNAME=<newname>] [OFFSET=<offset>]: Change name or/and offset of an flexplate
# If NAME is not defined the name and/or offset value of the active plate will be changed.
# !!! Caution do not use special characters like äüö or anything else in the name !!!
#
#####################################################################
#  LCD menu usage
#####################################################################
# Change the active flexplate and the offset of that flexplate.
#
#####################################################################
#  Get offset_z and name for own usage
#####################################################################
# {% set offset = printer.save_variables.variables.plate.offset[printer.save_variables.variables.plate.active] %}
# {% set name   = printer.save_variables.variables.plate.active %}
#
#####################################################################

#[delayed_gcode _CLEAR_DISPLAY]
#gcode:
#  M117

[gcode_macro _SET_PLATE_OFFSET]
description: Helper: Apply the z-offset of the active flexplate
gcode:
  {% if printer.save_variables.variables.plate %}
    {% set plate = printer.save_variables.variables.plate %}
    {action_respond_info("Setting plate '%s' with Z-offset %.3fmm" % (plate.active, plate.offset[plate.active]))}
    SET_GCODE_OFFSET Z={plate.offset[plate.active]}
  {% else %}
    {action_respond_info("No Plate Array defined. Skipping Flexplate offsets")}
  {% endif %}

[gcode_macro LIST_PLATES]
description: List all flexplates
gcode:
  {% if not printer.save_variables.variables.plate %}
    {action_raise_error("No Plate Array defined.")}
  {% endif %}
  {% set plate = printer.save_variables.variables.plate %}
  {% set out = ["FLEXPLATE: Defined Plates:"] %}
  {% for plate_name in plate.offset %}
    {% set _dummy = out.append("%s -> offset: %.3fmm %s" %
                    (plate_name,
                     plate.offset[plate_name],
                     '[active]' if plate_name == plate.active else '')) %}
  {% endfor %}
  {action_respond_info(out|join("\n"))}

[gcode_macro SET_PLATE]
description: Set an flexplate. Usage: SET_PLATE NAME=&lt;name&gt;
gcode:
  {% if not printer.save_variables.variables.plate %}
    {action_raise_error("No Plate Array defined.")}
  {% endif %}
  {% if not params.NAME %}
    {action_raise_error("Missing parameter NAME")}
  {% endif %}
  {% set plate = printer.save_variables.variables.plate %}
  {% set plate_name = params.NAME|string %}
  {% if plate_name not in plate.offset %}
    {action_raise_error("Plate '%s' not found" % plate_name)}
  {% endif %}
  {% set _dummy = plate.update({'active': plate_name}) %}
  SAVE_VARIABLE VARIABLE=plate VALUE="{plate}"
  M117 Plate: {plate.active}
  {action_respond_info("FLEXPLATE: Set plate: %s with offset: %.3fmm" %
                        (plate.active, plate.offset[plate.active]))}
  #UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

[gcode_macro ADD_PLATE]
description: Add a flexplate to the list. Usage: ADD_PLATE NAME=&lt;name&gt; [OFFSET=&lt;offset&gt;]
gcode:
  {% if not params.NAME %}
    {action_raise_error("Missing parameter NAME")}
  {% endif %}
  {% set plate_name = params.NAME|string %}
  {% set offset = params.OFFSET|default(0.0)|float|round(3) %}

  {% if not printer.save_variables.variables.plate %}
    {% set plate = {'active': None, 'offset': { } } %}
  {% else %}
    {% set plate = printer.save_variables.variables.plate %}
  {% endif %}

  {action_respond_info("FLEXPLATE: Add plate: %s with offset: %.3fmm" % (plate_name,offset))}
  {% set _dummy = plate.offset.update({plate_name: offset}) %}

  {% if plate.active == None %}
    {% set _dummy = plate.update({'active': plate_name}) %}
  {% endif %}
  SAVE_VARIABLE VARIABLE=plate VALUE="{plate}"

[gcode_macro REMOVE_PLATE]
description: Remove a flexplate from the list. Usage: REMOVE_PLATE NAME=&lt;name&gt;
gcode:
  {% if not printer.save_variables.variables.plate %}
    {action_raise_error("No Plate Array defined.")}
  {% endif %}
  {% if not params.NAME %}
    {action_raise_error("Missing parameter NAME")}
  {% endif %}
  {% set plate = printer.save_variables.variables.plate %}
  {% set plate_name = params.NAME|string %}
  {% if plate_name not in plate.offset %}
    {action_raise_error("Plate '%s' not found" % plate_name)}
  {% endif %}
  {% if plate.offset|length == 1 or plate.active == plate_name %}
    {action_raise_error("Last or active plate cannot be removed")}
  {% endif %}
  {% set _dummy = plate.offset.pop(plate_name) %}
  SAVE_VARIABLE VARIABLE=plate VALUE="{plate}"
  {action_respond_info("FLEXPLATE: Plate '%s' removed" % plate_name)}

[gcode_macro CHANGE_PLATE_VALUE]
description: Change name or offset of an flexplate in the list. Usage: CHANGE_PLATE_VALUE [NAME=&lt;name&gt;] [NEWNAME=&lt;newname&gt;] [OFFSET=&lt;offset&gt;]
gcode:
  {% if not printer.save_variables.variables.plate %}
    {action_raise_error("No Plate Array defined.")}
  {% endif %}
  {% set plate = printer.save_variables.variables.plate %}
  {% set plate_name = params.NAME if params.NAME else plate.active %}
  {% set old_plate_name = plate_name %}
  {% if plate_name not in plate.offset %}
    {action_raise_error("Plate '%s' not found" % plate_name)}
  {% endif %}
  {% set change_txt = [] %}
  {% if params.NEWNAME %}
    {% set new_plate_name = params.NEWNAME|string %}
    {% set _dummy = plate.offset.update({new_plate_name: plate.offset.pop(plate_name)}) %}
    {% if plate.active == plate_name %}
      {% set _dummy = plate.update({'active': new_plate_name}) %}
    {% endif %}
    {% set plate_name = new_plate_name %}
    {% set _dummy = change_txt.append("name to %s" % new_plate_name) %}
  {% endif %}
  {% if params.OFFSET %}
    {% set new_offset = params.OFFSET|float|round(3) %}
    {% set _dummy = plate.offset.update({plate_name: new_offset}) %}
    {% set _dummy = change_txt.append("offset to %.3fmm" % new_offset) %}
  {% endif %}
  {% if change_txt|length %}
    {action_respond_info("FLEXPLATE: Changed %s at plate '%s'" % (change_txt|join(" and "), old_plate_name))}
    SAVE_VARIABLE VARIABLE=plate VALUE="{plate}"
  {% else %}
    {action_respond_info("FLEXPLATE: Nothing changed at plate '%s'" % plate_name)}
  {% endif %}

